/*
 *
 *  Copyright (C) 2000 Silicon Graphics, Inc.  All Rights Reserved. 
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  Further, this software is distributed without any warranty that it is
 *  free of the rightful claim of any third person regarding infringement
 *  or the like.  Any license provided herein, whether implied or
 *  otherwise, applies only to this software file.  Patent licenses, if
 *  any, provided herein do not apply to combinations of this program with
 *  other software, or any other product whatsoever.
 * 
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 *  Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,
 *  Mountain View, CA  94043, or:
 * 
 *  http://www.sgi.com 
 * 
 *  For further information regarding this notice, see: 
 * 
 *  http://oss.sgi.com/projects/GenInfo/NoticeExplan/
 *
 */

/*
 * Copyright (C) 1990,91   Silicon Graphics, Inc.
 *
 _______________________________________________________________________
 ______________  S I L I C O N   G R A P H I C S   I N C .  ____________
 |
 |   $Revision: 1.1.1.1 $
 |
 |   Description:
 |	This file contains the actual X cursors bitmaps. The file 
 |  SoXtCursors.h contains cursors definitions (sizes and hot spot).
 |
 |   Author(s) : Alain Dumesny
 |
 ______________  S I L I C O N   G R A P H I C S   I N C .  ____________
 _______________________________________________________________________
 */

char so_xt_viewing_bits[] = {
   0x01, 0x00, 0x03, 0x00, 0x07, 0x00, 0x0f, 0x00, 0x1f, 0x00, 0x3f, 0x00,
   0x7f, 0x00, 0xff, 0x00, 0x1f, 0x00, 0x1b, 0x00, 0x31, 0x00, 0x30, 0x44,
   0x60, 0x44, 0x60, 0x28, 0x00, 0x28, 0x00, 0x10};

char so_xt_curved_hand_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x70, 0x69, 0x00, 0x88, 0x91, 0x00,
   0x08, 0x33, 0x01, 0x30, 0x66, 0x02, 0x20, 0x44, 0x04, 0x40, 0xcc, 0x04,
   0x80, 0x88, 0x08, 0x84, 0x08, 0x08, 0x9a, 0x00, 0x08, 0xa2, 0x00, 0x10,
   0xa2, 0x00, 0x10, 0x44, 0x00, 0x10, 0x08, 0x00, 0x10, 0x08, 0x00, 0x20,
   0x10, 0x00, 0x20, 0xe0, 0x00, 0x20, 0x00, 0x03, 0x20, 0x00, 0x04, 0x20,
   0x00, 0x08, 0x40, 0x00, 0x10, 0x80, 0x00, 0x20, 0x00, 0x00, 0x40, 0x00};

char so_xt_flat_hand_bits[] = {
   0xff, 0xff, 0x03, 0x01, 0x00, 0x02, 0x01, 0x00, 0x02, 0x01, 0x00, 0x03,
   0x01, 0x80, 0x04, 0x01, 0xe0, 0x1c, 0x01, 0x90, 0x14, 0x01, 0x90, 0x34,
   0x01, 0x90, 0x24, 0x01, 0x88, 0x64, 0xc1, 0x48, 0xa4, 0x21, 0x45, 0xa4,
   0x21, 0x45, 0xa2, 0x21, 0x22, 0x92, 0x21, 0x02, 0x92, 0x21, 0x02, 0x91,
   0x11, 0x01, 0x90, 0x1f, 0x01, 0x48, 0x10, 0x00, 0x40, 0x20, 0x00, 0x40,
   0x20, 0x00, 0x20, 0x40, 0x00, 0x20, 0x40, 0x00, 0x10, 0x80, 0x00, 0x10,
   0x00, 0x01, 0x08, 0x00, 0x01, 0x04, 0x00, 0x01, 0x04, 0x00, 0x01, 0x04};

char so_xt_pointing_hand_bits[] = {
   0x00, 0x06, 0x00, 0x00, 0x09, 0x00, 0x80, 0x10, 0x00, 0x40, 0x20, 0x00,
   0x20, 0x46, 0x00, 0x10, 0x89, 0x00, 0x00, 0x09, 0x00, 0x00, 0x09, 0x00,
   0x00, 0x39, 0x00, 0x00, 0xc9, 0x01, 0x00, 0x41, 0x02, 0x00, 0x01, 0x0e,
   0x00, 0x01, 0x10, 0x00, 0x01, 0x10, 0x3c, 0x01, 0x10, 0xc2, 0x01, 0x10,
   0x0c, 0x03, 0x10, 0x10, 0x00, 0x08, 0x20, 0x00, 0x08, 0x40, 0x00, 0x08,
   0x80, 0x00, 0x04, 0x00, 0x01, 0x04, 0x00, 0x02, 0x04, 0x00, 0x04, 0x08};

char so_xt_roll_bits[] = {
   0x04, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x0c, 0x00, 0x00, 0xfc, 0x07, 0x00,
   0x3c, 0x18, 0x00, 0xfc, 0x20, 0x00, 0xfc, 0x41, 0x00, 0x00, 0x80, 0x00,
   0x00, 0x80, 0x00, 0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01,
   0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00,
   0x04, 0x7f, 0x00, 0x08, 0x7e, 0x00, 0x30, 0x78, 0x00, 0xc0, 0x7f, 0x00,
   0x00, 0x60, 0x00, 0x00, 0x60, 0x00, 0x00, 0x40, 0x00};

char so_xt_target_bits[] = {
   0x00, 0x0e, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e, 0x00, 0x80, 0x3f, 0x00,
   0x40, 0x4e, 0x00, 0x20, 0x84, 0x00, 0x10, 0x04, 0x01, 0x08, 0x04, 0x02,
   0x08, 0x04, 0x02, 0x1f, 0x00, 0x1f, 0xff, 0xf1, 0x1f, 0x1f, 0x00, 0x1f,
   0x08, 0x04, 0x02, 0x08, 0x04, 0x02, 0x10, 0x04, 0x01, 0x20, 0x84, 0x00,
   0x40, 0x4e, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e, 0x00,
   0x00, 0x0e, 0x00};

char so_xt_normal_vec_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x38, 0x00,
   0x00, 0x7c, 0x00, 0x00, 0xd6, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00,
   0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00,
   0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x80, 0xff, 0x3f, 0x40, 0x10, 0x10,
   0x40, 0x38, 0x10, 0x20, 0x54, 0x08, 0x20, 0x54, 0x08, 0x10, 0x44, 0x04,
   0x10, 0x38, 0x04, 0x08, 0x00, 0x02, 0x08, 0x00, 0x02, 0xfc, 0xff, 0x01};


///////////////////////////////////////////////////////////////////////////
//
// Walk viewer cursors
//
///////////////////////////////////////////////////////////////////////////

char so_xt_walk_bits[] = {
   0x00, 0x80, 0x01, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x20, 0x04, 0x00,
   0x00, 0x90, 0x09, 0x00, 0x00, 0x48, 0x12, 0x00, 0x00, 0x40, 0x02, 0x00,
   0x00, 0x40, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x40, 0x0e, 0x00,
   0x00, 0x40, 0x72, 0x00, 0x00, 0x40, 0x90, 0x00, 0x00, 0x40, 0x80, 0x03,
   0x00, 0x40, 0x00, 0x04, 0x00, 0x40, 0x00, 0x04, 0x00, 0x4f, 0x00, 0x04,
   0x80, 0x70, 0x00, 0x04, 0x80, 0xc3, 0x00, 0x04, 0x00, 0x04, 0x00, 0x06,
   0x00, 0x08, 0x00, 0x02, 0x00, 0x10, 0x00, 0x02, 0x00, 0x20, 0x00, 0x03,
   0x00, 0x40, 0x00, 0x01, 0x00, 0x80, 0x00, 0x01, 0x00, 0x00, 0x01, 0x02};

char so_xt_walk_mask_bits[] = {
   0x00, 0x80, 0x01, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x20, 0x04, 0x00,
   0x00, 0x90, 0x09, 0x00, 0x00, 0x48, 0x12, 0x00, 0x00, 0x40, 0x02, 0x00,
   0x00, 0x40, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x40, 0x0e, 0x00,
   0x00, 0x40, 0x72, 0x00, 0x00, 0x44, 0x90, 0x00, 0x80, 0x42, 0x80, 0x03,
   0x41, 0x45, 0x00, 0x84, 0xa2, 0x42, 0x00, 0x44, 0x55, 0x4f, 0x00, 0xac,
   0xaa, 0x70, 0x00, 0x54, 0xd5, 0xc3, 0x00, 0xac, 0x2a, 0x04, 0x00, 0x56,
   0x55, 0x08, 0x00, 0xaa, 0xaa, 0x10, 0x00, 0x56, 0x55, 0x21, 0x00, 0xab,
   0x00, 0x40, 0x00, 0x01, 0x00, 0x80, 0x00, 0x01, 0x00, 0x00, 0x01, 0x02};

char so_xt_pan_bits[] = {
   0x00, 0x30, 0x00, 0x00, 0x48, 0x00, 0x00, 0xce, 0x01, 0x00, 0x49, 0x01,
   0x00, 0x49, 0x03, 0x00, 0x49, 0x02, 0x80, 0x48, 0x06, 0x8c, 0x44, 0x0a,
   0x52, 0x44, 0x0a, 0x52, 0x24, 0x0a, 0x22, 0x22, 0x09, 0x22, 0x20, 0x09,
   0x22, 0x10, 0x09, 0x11, 0x00, 0x09, 0x11, 0x80, 0x04, 0x01, 0x00, 0x04,
   0x02, 0x00, 0x04, 0x02, 0x00, 0x02, 0x04, 0x00, 0x02, 0x04, 0x00, 0x01,
   0x08, 0x00, 0x01, 0x10, 0x80, 0x00, 0x10, 0x40, 0x00, 0x10, 0x40, 0x00};

char so_xt_tilt_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0xf0, 0x00, 0x00, 0x80, 0x0f, 0x0d, 0x00, 0x40, 0x30, 0x12, 0x00,
   0x40, 0x60, 0x26, 0x00, 0x80, 0xc3, 0x4c, 0x00, 0x00, 0x84, 0x88, 0x00,
   0x00, 0x88, 0x99, 0x00, 0x00, 0x10, 0x11, 0x01, 0x80, 0x10, 0x01, 0x01,
   0x40, 0x13, 0x00, 0x01, 0x40, 0x14, 0x00, 0x02, 0x40, 0x14, 0x00, 0x02,
   0x80, 0x08, 0x00, 0x02, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x04,
   0x00, 0x02, 0x00, 0x04, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x60, 0x00, 0x04,
   0x00, 0x80, 0x00, 0x04, 0x00, 0x00, 0x01, 0x08, 0x00, 0x00, 0x02, 0x10,
   0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00};

char so_xt_tilt_mask_bits[] = {
   0x00, 0x02, 0x00, 0x00, 0x40, 0x05, 0x00, 0x00, 0xa0, 0x0a, 0x00, 0x00,
   0x54, 0x15, 0x00, 0x00, 0xaa, 0x2a, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00,
   0xa0, 0x02, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00,
   0x50, 0xf1, 0x00, 0x00, 0xa0, 0x0f, 0x0d, 0x00, 0x50, 0x30, 0x12, 0x00,
   0x40, 0x60, 0x26, 0x00, 0x80, 0xc3, 0x4c, 0x00, 0x00, 0x84, 0x88, 0x00,
   0x00, 0x88, 0x99, 0x00, 0x00, 0x10, 0x11, 0x01, 0x80, 0x10, 0x01, 0x01,
   0x40, 0x13, 0x00, 0x01, 0x40, 0x14, 0x00, 0x02, 0x50, 0x14, 0x00, 0x02,
   0xa0, 0x08, 0x00, 0x02, 0x50, 0x01, 0x00, 0x02, 0xa0, 0x01, 0x00, 0x04,
   0x40, 0x03, 0x00, 0x04, 0xa0, 0x1e, 0x00, 0x04, 0x55, 0x75, 0x00, 0x04,
   0xaa, 0xaa, 0x00, 0x04, 0x54, 0x15, 0x01, 0x08, 0xa0, 0x0a, 0x02, 0x10,
   0x40, 0x05, 0x04, 0x00, 0x00, 0x02, 0x08, 0x00};


